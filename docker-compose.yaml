version: "3.10"

services:
  postgres:
    container_name: postgres
    image: postgres:14-alpine
    restart: always
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
      - POSTGRES_DB=order_service
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"
    networks:
      - app-network
    volumes:
      - db_data:/var/lib/postgresql/data

  redis:
    container_name: redis
    image: redis/redis-stack-server:latest
    expose:
      - "6379"
    ports:
      - "6379:6379"
    networks:
      - app-network

  celery:
    container_name: celery
    build:
      context: .
      dockerfile: Dockerfile
    command: ./start.sh
    environment:
      - ENTRYPOINT=celery
    env_file:
      - ./.env
    depends_on:
      - redis
      - postgres
    networks:
      - app-network

  celery-beat:
    container_name: beat
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A order_service beat --loglevel=info
    environment:
      - ENTRYPOINT=celery
    env_file:
      - ./.env
    depends_on:
      - redis
      - postgres
      - celery
    networks:
      - app-network

  django:
    container_name: django
    build:
      context: .
      dockerfile: Dockerfile
    command: ./start.sh
    environment:
      - ENTRYPOINT=django
    env_file:
      - ./.env
    depends_on:
      - redis
      - postgres
    expose:
      - "8000"
    ports:
      - "8000:8000"
    networks:
      - app-network

volumes:
  db_data:

networks:
  app-network:
    driver: bridge
